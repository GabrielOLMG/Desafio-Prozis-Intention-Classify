from django.db import models
from django.utils import timezone
from django.utils.translation import gettext_lazy as _


class CeleryCommon(models.Model):
    # ---------------------------------------------- #
    # Celery
    current_action = models.CharField(
        max_length=200,
        blank=True,
        help_text="What the process is currently doing.",
    )
    last_action = models.CharField(
        max_length=200,
        blank=True,
        help_text="The last action performed by the process.",
    )
    celery_running = models.BooleanField(default=False)
    celery_task = models.CharField(
        _("Celery Task ID"),
        max_length=100,
        editable=False,
        default="",
        help_text="ID generated by celery while is running",
    )
    celery_status = models.CharField(
        _("Celery Status"),
        max_length=100,
        editable=False,
        default="NO INFO",
        help_text="Last status reported from celery",
    )
    started = models.DateTimeField(_("start"), null=True, blank=True, auto_now_add=True)
    finished = models.DateTimeField(_("end"), null=True, blank=True)

    class Meta:
        abstract = True

    def kill_celery(self):
        from celery import current_app

        if self.celery_task:
            current_app.control.revoke(
                self.celery_task,
                terminate=True,
                signal="SIGKILL",
            )
            self.last_action = f"{self.current_action} - TERMINATED"
            self.current_action = None
            self.celery_running = False
            self.celery_task = ""
            self.celery_status = ""
            self.finished = timezone.now()
            self.celery_status = "TERMINATED"
            self.save()
